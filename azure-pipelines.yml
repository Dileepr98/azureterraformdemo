# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0
  displayName: 'Terraform - Install'
  inputs:
    terraformVersion: 'latest'
- task: TerraformCLI@0
  displayName: 'Terraform - Init'
  inputs:
    command: 'init'
    backendType: 'azurerm'
    backendServiceArm: 'Free Trial(2ee6da9b-a647-401e-9408-ab64ec71fb25)'
    backendAzureRmResourceGroupName: 'k8sdem-norg'
    backendAzureRmStorageAccountName: 'newk8sstorage'
    backendAzureRmContainerName: 'tfstate'
    backendAzureRmKey: 'terraform.tfstate'
    allowTelemetryCollection: true
- task: TerraformCLI@0
  displayName: 'Terraform Plan'
  inputs:
    command: 'plan'
    environmentServiceName: 'Free Trial(2ee6da9b-a647-401e-9408-ab64ec71fb25)'
    runAzLogin: true
    commandOptions: '-var-file="terraform.tfvars"'
    allowTelemetryCollection: true
    publishPlanResults: 'tfplan'
- task: TerraformCLI@0
  displayName: 'Terraform Validate'
  inputs:
    command: 'validate'
    allowTelemetryCollection: true
- task: TerraformCLI@0
  displayName: 'Terraform Apply'
  inputs:
    command: 'apply'
    environmentServiceName: 'Free Trial(2ee6da9b-a647-401e-9408-ab64ec71fb25)'
    runAzLogin: true
    commandOptions: '-var-file="terraform.tfvars"'
    allowTelemetryCollection: true
- task: HelmInstaller@0
  displayName: 'Helm Instaler'
  inputs:
    helmVersion: '2.14.1'
    installKubectl: true
- task: HelmDeploy@0
  displayName: 'Helm Init'
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscription: 'Free Trial(2ee6da9b-a647-401e-9408-ab64ec71fb25)'
    azureResourceGroup: 'aks_terraform_nrg'
    kubernetesCluster: 'terraform-naks'
    command: 'init'
    canaryImage: true
- task: HelmDeploy@0
  displayName: 'Helm Upgrade'
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscription: 'Free Trial(2ee6da9b-a647-401e-9408-ab64ec71fb25)'
    azureResourceGroup: 'aks_terraform_nrg'
    kubernetesCluster: 'terraform-naks'
    namespace: 'default'
    command: 'upgrade'
    chartType: 'FilePath'
    chartPath: '$(System.DefaultWorkingDirectory)/**/*.tgz'
    releaseName: 'azurek8sdevops'
    recreate: true
    resetValues: true
    force: true
    arguments: '--set image.repository=$(imageRepoName) --set image.tag=$(Build.BuildId)'