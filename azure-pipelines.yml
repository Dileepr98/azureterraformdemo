# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

variables:
 vmImageName: 'ubuntu-latest'

stages:
- stage: Terraform
  displayName: Terraform Stage
  jobs:
  - job: Terraform
    displayName: Terraform
    pool:
      vmImage: $(vmImageName) 
    steps:
    - task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0
      displayName: 'Terraform - Install'
      inputs:
        terraformVersion: 'latest'
    - task: TerraformCLI@0
      displayName: 'Terraform - Init'
      inputs:
        command: 'init'
        backendType: 'azurerm'
        backendServiceArm: 'Free Trial(2ee6da9b-a647-401e-9408-ab64ec71fb25)'
        backendAzureRmResourceGroupName: 'k8sdem-norg'
        backendAzureRmStorageAccountName: 'newk8sstorage'
        backendAzureRmContainerName: 'tfstate'
        backendAzureRmKey: 'terraform.tfstate'
        allowTelemetryCollection: true
    - task: TerraformCLI@0
      displayName: 'Terraform Plan'
      inputs:
        command: 'plan'
        environmentServiceName: 'Free Trial(2ee6da9b-a647-401e-9408-ab64ec71fb25)'
        runAzLogin: true
        commandOptions: '-var-file="terraform.tfvars"'
        allowTelemetryCollection: true
        publishPlanResults: 'tfplan'
    - task: TerraformCLI@0
      displayName: 'Terraform Validate'
      inputs:
        command: 'validate'
        allowTelemetryCollection: true
    - task: TerraformCLI@0
      displayName: 'Terraform Apply'
      inputs:
        command: 'apply'
        environmentServiceName: 'Free Trial(2ee6da9b-a647-401e-9408-ab64ec71fb25)'
        runAzLogin: true
        commandOptions: '-var-file="terraform.tfvars"'
        allowTelemetryCollection: true
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build job
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: DockerCompose@0
      displayName: 'Docker - Build'
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'Free Trial(2ee6da9b-a647-401e-9408-ab64ec71fb25)'
        azureContainerRegistry: '{"loginServer":"demotf001nacr.azurecr.io", "id" : "/subscriptions/2ee6da9b-a647-401e-9408-ab64ec71fb25/resourceGroups/aks_terraform_nrg/providers/Microsoft.ContainerRegistry/registries/demotf001nacr"}'
        dockerComposeFile: '**/docker-compose.yml'
        action: 'Build services'
        additionalImageTags: '$(Build.BuildId)'
    - task: DockerCompose@0
      displayName: 'Docker - Push'
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'Free Trial(2ee6da9b-a647-401e-9408-ab64ec71fb25)'
        azureContainerRegistry: '{"loginServer":"demotf001nacr.azurecr.io", "id" : "/subscriptions/2ee6da9b-a647-401e-9408-ab64ec71fb25/resourceGroups/aks_terraform_nrg/providers/Microsoft.ContainerRegistry/registries/demotf001nacr"}'
        dockerComposeFile: '**/docker-compose.yml'
        action: 'Push services'
        additionalImageTags: '$(Build.BuildId)'